##################################################
###      Variables for the Prometheus          ###  
##################################################
kube-prometheus-stack:
  prometheus:
    prometheusSpec:
      retention: 7d
      storageSpec:
        volumeClaimTemplate:
          spec:
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 5Gi

      additionalScrapeConfigs:
        - job_name: kubernetes-nodes-cadvisor
          scrape_interval: 10s
          scrape_timeout: 10s
          scheme: https
          tls_config:
            ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          kubernetes_sd_configs:
            - role: node
          relabel_configs:
            - action: labelmap
              regex: __meta_kubernetes_node_label_(.+)
            - target_label: __address__
              replacement: kubernetes.default.svc:443
            - source_labels: [__meta_kubernetes_node_name]
              regex: (.+)
              target_label: __metrics_path__
              replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor

      serviceMonitorSelectorNilUsesHelmValues: false

  alertmanager:
    enabled: true
    config:
      global:
        resolve_timeout: 5m
      route:
        group_by: ['alertname']
        group_wait: 10s
        group_interval: 5m
        repeat_interval: 3h
        receiver: 'msteams'
      receivers:
        - name: 'msteams'
          webhook_configs:
            - url: 'https://mdcloudps.webhook.office.com/webhookb2/36374362-6fb7-4875-88c3-5465a33288e0@33d2928a-e889-4d75-8b16-ff1cb54ae031/IncomingWebhook/a5297bf0b33e49bdb173f7fc1a2542f4/afd3765f-3b39-4b18-b114-51b0a684804e/V2xbmy1TCXU4NfUqh6NDqp4myKzJc6QRb2nj7rSNN8lLY1'
              send_resolved: true

  grafana:
    enabled: false  

  groups:
  - name: compatibility-rules
    rules:
    - record: container_cpu_usage_seconds_total
      expr: container_cpu_usage_seconds_total{job="kubelet", metrics_path="/metrics/cadvisor"}
      labels:
        job: kubernetes-nodes-cadvisor  


##################################################
###         Variables for the Grafana          ###  
##################################################
grafana:
  admin:
    existingSecret: grafana-admin
    passwordKey: admin-password
    userKey: admin-user


  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: Loki
          type: loki
          access: proxy
          url: http://loki-read:3100
          isDefault: true
        - name: Prometheus
          type: prometheus
          access: proxy
          url: http://prometheus-operated.monitoring.svc.cluster.local:9090
          editable: true  

  persistence:
    enabled: false
    storageClassName: standard
    size: 5Gi

  service:
    type: NodePort
  
  # dashboards:
  #   enabled: true
  #   labelValue: "1"
  # sidecar:

  sidecar:
    dashboards:
      enabled: true
      label: grafana_dashboard
      labelValue: "1"

    dashboardsConfigMaps:
      - grafana-dashboard-k8s
    # dashboards:
    #   default:
    #     k8s-cluster:
    #       file: /var/lib/grafana/dashboards/k8s-cluster-overview.json

    # dashboardProviders:
    #   dashboardproviders.yaml:
    #     apiVersion: 1
    #     providers:
    #       - name: 'default'
    #         orgId: 1
    #         folder: ''
    #         type: file
    #         disableDeletion: false
    #         editable: true
    #         options:
    #           path: /var/lib/grafana/dashboards      

    # extraVolumeMounts:
    #   - name: dashboards
    #     mountPath: /var/lib/grafana/dashboards
  
    # extraVolumes:
    #   - name: dashboards
    #     configMap:
    #       name: grafana-dashboard-k8s
  

##################################################
###         Variables for the loki             ###  
##################################################
loki:
  fullnameOverride: loki
  deploymentMode: SimpleScalable
  tableManager:
    # Fuerza el envío de los bloques de índice cada 5 minutos
    sync_period: 1m
    retention_deletes_enabled: true
    retention_period: 168h
  loki:
    auth_enabled: false

    commonConfig:
      replication_factor: 1

    storage:
      bucketNames:
        chunks: bucketprueba-jh
        ruler: bucketprueba-jh
        admin: bucketprueba-jh
      s3:
        region: us-east-1
        s3forcepathstyle: true
        insecure: false  

    storageConfig:
      tsdb_shipper:
        active_index_directory: /data/loki/index
        cache_location: /data/loki/cache
        shared_store: s3
      aws:
        bucketnames:
          chunks: bucketprueba-jh
          ruler: bucketprueba-jh
          admin: bucketprueba-jh
        region: us-east-1
        s3forcepathstyle: true
        insecure: false

    schemaConfig:
      configs:
        - from: "2024-01-01"
          store: tsdb
          object_store: s3
          schema: v13
          index:
            prefix: index_
            period: 24h

    # persistence:
    #   enabled: true
    #   storageClassName: standard
    #   size: 5Gi

  memberlistConfig:
    bind_port: 7946

  write:
    replicas: 1
    extraEnv:
      - name: AWS_ACCESS_KEY_ID
        valueFrom:
          secretKeyRef:
            name: loki-s3-credentials
            key: access_key_id
      - name: AWS_SECRET_ACCESS_KEY
        valueFrom:
          secretKeyRef:
            name: loki-s3-credentials
            key: secret_access_key
  read:
    replicas: 1
    extraEnv:
      - name: AWS_ACCESS_KEY_ID
        valueFrom:
          secretKeyRef:
            name: loki-s3-credentials
            key: access_key_id
      - name: AWS_SECRET_ACCESS_KEY
        valueFrom:
          secretKeyRef:
            name: loki-s3-credentials
            key: secret_access_key
  backend:
    replicas: 1
    extraEnv:
      - name: AWS_ACCESS_KEY_ID
        valueFrom:
          secretKeyRef:
            name: loki-s3-credentials
            key: access_key_id
      - name: AWS_SECRET_ACCESS_KEY
        valueFrom:
          secretKeyRef:
            name: loki-s3-credentials
            key: secret_access_key
  ruler:
    extraEnv:
      - name: AWS_ACCESS_KEY_ID
        valueFrom:
          secretKeyRef:
            name: loki-s3-credentials
            key: AWS_ACCESS_KEY_ID
      - name: AWS_SECRET_ACCESS_KEY
        valueFrom:
          secretKeyRef:
            name: loki-s3-credentials
            key: AWS_SECRET_ACCESS_KEY         

  limits_config:
    allow_structured_metadata: true
    retention_period: 168h

  rulerConfig:
    alertmanager_url: http://observability-stack-kube-p-alertmanager.monitoring.svc.cluster.local:9093
    wal:
      dir: /var/loki/ruler-wal

  gateway:
    enabled: false
  singleBinary:
    replicas: 0
  test:
    enabled: false
  chunksCache:
    enabled: false
  resultsCache:
    enabled: false




##################################################
###       Variables for the promtail           ###  
##################################################

# promtail:
#   config:
#     clients:
#       - url: http://loki-write.monitoring.svc.cluster.local:3100/loki/api/v1/push


#     snippets:
#       pipelineStages:
#         - docker: {}
#         - cri: {}

promtail:
  config:
    clients:
      - url: http://loki-write.monitoring.svc.cluster.local:3100/loki/api/v1/push

    scrape_configs:
      - job_name: kubernetes-pods
        # Descubre todos los pods en todos los namespaces
        kubernetes_sd_configs:
          - role: pod

        pipeline_stages:
          - cri: {}
          # Opcional: quita labels que no quieras llevar
          - labeldrop:
              - filename
              - job
          - labelallow:
              - namespace
              - pod
              - container

        relabel_configs:
          # 1) Excluir TODO pod cuyo nombre empiece por "loki-"
          - source_labels: [__meta_kubernetes_pod_name]
            regex: loki-.*
            action: drop

          # 2) (Opcional) Excluir cualquier pod en el namespace monitoring que empiece por "loki"
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_pod_name]
            regex: monitoring;(loki-.*)
            action: drop

          # 3) Mantener sólo pods etiquetados con "app" (o ajusta a tus etiquetas de aplicación)
          - source_labels: [__meta_kubernetes_labels_app]
            regex: .+
            action: keep